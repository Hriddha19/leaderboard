// api/leaderboard.js
import { createCanvas, registerFont } from 'canvas';

export default async function handler(req, res) {
  try {
    const { type = 'goals', data = 'Player1+10+Player2+5' } = req.query;
    
    console.log('Received params:', { type, data }); // Debug log
    
    // Parse data - handle URL decoding
    const decodedData = decodeURIComponent(data);
    const parts = decodedData.split('+');
    const players = [];
    
    console.log('Split parts:', parts); // Debug log
    
    for (let i = 0; i < parts.length; i += 2) {
      if (i + 1 < parts.length) {
        const name = parts[i].trim();
        const score = parseInt(parts[i + 1]) || 0;
        if (name) { // Only add if name is not empty
          players.push({
            name,
            score
          });
        }
      }
    }
    
    console.log('Parsed players:', players); // Debug log
    
    // Sort players by score (highest first)
    players.sort((a, b) => b.score - a.score);
    
    // If no players, add default ones for testing
    if (players.length === 0) {
      players.push(
        { name: 'Player1', score: 10 },
        { name: 'Player2', score: 5 }
      );
    }
    
    // Canvas dimensions
    const width = 600;
    const height = 150 + players.length * 60;
    
    // Create canvas
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext('2d');
    
    // Background gradient
    const gradient = ctx.createLinearGradient(0, 0, 0, height);
    gradient.addColorStop(0, '#667eea');
    gradient.addColorStop(1, '#764ba2');
    ctx.fillStyle = gradient;
    ctx.fillRect(0, 0, width, height);
    
    // Title
    ctx.fillStyle = 'white';
    ctx.font = 'bold 32px Arial';
    ctx.textAlign = 'center';
    ctx.fillText(type.toUpperCase() + ' LEADERBOARD', width/2, 50);
    
    // Players
    players.forEach((player, index) => {
      const y = 120 + index * 60;
      const position = index + 1;
      let badgeColor = '#FFD700'; // Gold
      if (position === 2) badgeColor = '#C0C0C0'; // Silver  
      if (position === 3) badgeColor = '#CD7F32'; // Bronze
      if (position > 3) badgeColor = '#4A5568'; // Gray
      
      // Position badge (circle)
      ctx.beginPath();
      ctx.arc(50, y, 20, 0, 2 * Math.PI);
      ctx.fillStyle = badgeColor;
      ctx.fill();
      
      // Position number
      ctx.fillStyle = 'black';
      ctx.font = 'bold 16px Arial';
      ctx.textAlign = 'center';
      ctx.fillText(position.toString(), 50, y + 5);
      
      // Player name
      ctx.fillStyle = 'white';
      ctx.font = 'bold 24px Arial';
      ctx.textAlign = 'left';
      ctx.fillText(player.name, 90, y + 8);
      
      // Score
      ctx.fillStyle = '#FFE135';
      ctx.font = 'bold 28px Arial';
      ctx.textAlign = 'right';
      ctx.fillText(player.score.toString(), width - 40, y + 8);
      
      // Separator line
      if (index < players.length - 1) {
        ctx.strokeStyle = 'rgba(255,255,255,0.2)';
        ctx.lineWidth = 1;
        ctx.beginPath();
        ctx.moveTo(40, y + 30);
        ctx.lineTo(width - 40, y + 30);
        ctx.stroke();
      }
    });
    
    // Footer
    ctx.fillStyle = 'rgba(255,255,255,0.5)';
    ctx.font = '14px Arial';
    ctx.textAlign = 'center';
    ctx.fillText('Generated by Discord Bot', width/2, height - 20);
    
    // Convert to PNG buffer
    const buffer = canvas.toBuffer('image/png');
    
    // Set headers
    res.setHeader('Content-Type', 'image/png');
    res.setHeader('Cache-Control', 'public, max-age=3600');
    res.status(200).send(buffer);
    
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}
